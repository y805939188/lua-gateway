# user  root;
worker_processes  1;

error_log  logs/error.log  notice;
error_log  logs/debug.log debug;
error_log  logs/info.log info;
pid        conf/nginx.pid;

env POD_META_NAME;
env POD_META_NAMESPACE;
# env PROPHET_PAS_ID;
# env PROPHET_PAS_DEPLOYMENT_NAME;
env CUSTOME_AB_TEST_ENDPOINTS;

events {
    worker_connections  1024;
}

http {
    # include     /usr/local/openresty/nginx/conf/mime.types;
    include     /Users/4paradigm/Desktop/monitor-proxy/conf/mime.types;
    default_type  application/octet-stream;
    # lua_shared_dict metrics 16m;

    lua_shared_dict upstream_list 10m;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" ';

    sendfile        on;
    keepalive_timeout  120;
    keepalive_requests 100000;

	# lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";
    # lua_package_path "/usr/local/opt/openresty/nginx/lua/?.lua;;";
    lua_package_path "/Users/4paradigm/Desktop/lua-gateway/lua/?.lua;;";
	init_worker_by_lua_file "lua/upstreams.lua";

	upstream backend {
        server 0.0.0.1; # Use a fake address placeholder
        # include backend.conf;
        # include backend.temp.conf;
        balancer_by_lua_file "lua/balaner.lua";
        # server localhost:6677;
        # server localhost:8899;
	}

    server {
        # access_log  logs/access.log main;
        listen       80;
        server_name  _;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    Host                $host;
        location / {
            # default_type text/html;
            client_max_body_size 100m;
			# log_by_lua_file "lua/log.lua";
			proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://backend;
            # content_by_lua_file lua/init.lua;
        }
        # location /metrics {
        #     content_by_lua_file "lua/prometheus_export.lua";
        # }
    }
}
